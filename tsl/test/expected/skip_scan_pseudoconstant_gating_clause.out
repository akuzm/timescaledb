-- This file and its contents are licensed under the Timescale License.
-- Please see the included NOTICE for copyright information and
-- LICENSE-TIMESCALE for a copy of the license.
\c :TEST_DBNAME :ROLE_SUPERUSER
-- helper function: float -> pseudorandom float [0..1]
CREATE OR REPLACE FUNCTION mix(x anyelement) RETURNS float8 AS $$
    SELECT hashfloat8(x::float8) / pow(2, 32) + 0.5
$$ LANGUAGE SQL;
CREATE TABLE IF NOT EXISTS timdat (
  dinr                  integer NOT NULL DEFAULT 0,
  lormnr                character(32) NOT NULL DEFAULT ' '::character(1),
  cibin                 character(16) NOT NULL DEFAULT ' '::character(1),
  tloan                 character(12) NOT NULL DEFAULT ' '::character(1),
  dust_timdat           character(48) NOT NULL DEFAULT ' '::character(1),
  PRIMARY KEY (dinr, lormnr, cibin)
);
INSERT INTO timdat (dinr,lormnr,cibin,tloan,dust_timdat)
SELECT
  floor(mix(n % 100) * 255 + 1)::int,
  upper(substr(md5(mix(n + 1)::text), 1, 32)),
  upper(substr(md5(mix(n + 2)::text), 1, 10)),
  upper(substr(md5(mix(n + 3)::text), 1, 10)),
  upper(substr(md5(mix(n + 4)::text), 1, 48))
FROM generate_series(1,3000) n
;
CREATE TABLE IF NOT EXISTS kendat (
  dinr                  integer NOT NULL DEFAULT 0,
  kind                  integer NOT NULL DEFAULT 0,
  dal                   character(15) NOT NULL DEFAULT ' '::character(1),
  cibin                 character(10) NOT NULL DEFAULT ' '::character(1),
  cutdat                character(10) NOT NULL DEFAULT ' '::character(1),
  PRIMARY KEY (dinr, cibin)
);
CREATE INDEX kendat_dinr_cutdat_idx ON kendat (dinr, cutdat);
INSERT INTO kendat (dinr,kind,dal,cibin,cutdat)
SELECT
  floor(mix((n + 5) % 100) * 255 + 1)::int,
  floor(mix(n + 6) * 255 + 1)::int,
  upper(substr(md5(mix(n + 7)::text), 1, 15)),
  upper(substr(md5(mix(n + 2)::text), 1, 10)),
  upper(substr(md5(mix(n + 9)::text), 1, 10))
FROM generate_series(1,3000) n
;
set timescaledb.enable_skipscan to off;
-- Check that SkipScan subquery returns some rows
SELECT DISTINCT timdat.cibin
FROM timdat
WHERE timdat.dinr = 159
    AND timdat.lormnr = 'B6EE18DA60E17E10298EC274CBF50522';
      cibin       
------------------
 37DB86B977      
(1 row)

-- No gating clause
SELECT kendat.cibin, kendat.dal, kendat.cutdat
FROM kendat
WHERE kendat.dinr = 159
    AND kendat.kind = 196
    AND kendat.cibin NOT IN (
        SELECT DISTINCT timdat.cibin
        FROM timdat
        WHERE timdat.dinr = 159
            AND timdat.lormnr = 'B6EE18DA60E17E10298EC274CBF50522');
 cibin | dal | cutdat 
-------+-----+--------
(0 rows)

-- Parameterized subplan
WITH param AS MATERIALIZED (select unnest(array[195, 196, 197]) kind)
SELECT kendat.cibin, kendat.dal, kendat.cutdat
FROM kendat, param
WHERE kendat.dinr = 159
    AND kendat.kind = param.kind
    AND kendat.cibin NOT IN (
        SELECT DISTINCT timdat.cibin
        FROM timdat
        WHERE timdat.dinr = 159
            AND timdat.lormnr = 'B6EE18DA60E17E10298EC274CBF50522');
 cibin | dal | cutdat 
-------+-----+--------
(0 rows)

-- Gating pseudoconstant clause under SkipScan is true
SELECT kendat.cibin, kendat.dal, kendat.cutdat
FROM kendat
WHERE kendat.dinr = 159
    AND kendat.kind = 196
    AND kendat.cibin NOT IN (
        SELECT DISTINCT timdat.cibin
        FROM timdat
        WHERE timdat.dinr = 159
            AND kendat.kind = 196
            AND timdat.lormnr = 'B6EE18DA60E17E10298EC274CBF50522');
 cibin | dal | cutdat 
-------+-----+--------
(0 rows)

-- Gating pseudoconstant clause under SkipScan is false
SELECT kendat.cibin, kendat.dal, kendat.cutdat
FROM kendat
WHERE kendat.dinr = 159
    AND kendat.kind = 196
    AND kendat.cibin NOT IN (
        SELECT DISTINCT timdat.cibin
        FROM timdat
        WHERE timdat.dinr = 159
            AND kendat.kind = 196000
            AND timdat.lormnr = 'B6EE18DA60E17E10298EC274CBF50522');
   cibin    |       dal       |   cutdat   
------------+-----------------+------------
 37DB86B977 | 0A0819C358AFFC6 | BF4CCE8EBB
(1 row)

-- Gating pseudoconstant clause under SkipScan is parameterized and true
WITH param AS MATERIALIZED (select unnest(array[195, 196, 197]) kind)
SELECT kendat.cibin, kendat.dal, kendat.cutdat
FROM kendat, param
WHERE kendat.dinr = 159
    AND kendat.kind = param.kind
    AND kendat.cibin NOT IN (
        SELECT DISTINCT timdat.cibin
        FROM timdat
        WHERE timdat.dinr = 159
            AND kendat.kind = param.kind
            AND timdat.lormnr = 'B6EE18DA60E17E10298EC274CBF50522');
 cibin | dal | cutdat 
-------+-----+--------
(0 rows)

-- Gating pseudoconstant clause under SkipScan is parameterized and false
WITH param AS MATERIALIZED (select unnest(array[195, 196, 197]) kind)
SELECT kendat.cibin, kendat.dal, kendat.cutdat
FROM kendat, param
WHERE kendat.dinr = 159
    AND kendat.kind = param.kind
    AND kendat.cibin NOT IN (
        SELECT DISTINCT timdat.cibin
        FROM timdat
        WHERE timdat.dinr = 159
            AND kendat.kind != param.kind
            AND timdat.lormnr = 'B6EE18DA60E17E10298EC274CBF50522');
   cibin    |       dal       |   cutdat   
------------+-----------------+------------
 37DB86B977 | 0A0819C358AFFC6 | BF4CCE8EBB
(1 row)

